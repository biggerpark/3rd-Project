<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.jobdone.service.ServiceMapper">
    <insert id="insService" keyProperty="serviceId" useGeneratedKeys="true">
        insert into service
        (userId , productId, price, lat, lng, address, comment, phone, name, pyeong)
        values
        (#{userId} , #{productId}, #{totalPrice}, #{lat}, #{lng}, #{address}, #{comment}, #{phone}, #{name}, #{pyeong})
    </insert>

    <insert id="insServiceDetail">
        insert into service_detail
        (serviceId, startDate, mStartTime)
        values
        (#{serviceId}, #{startDate}, #{mStartTime})
    </insert>

    <insert id="insServiceOption">
            INSERT INTO service_option (serviceId, optionDetailId)
            VALUES
        <foreach collection="options" item="option" separator=";">
            (#{serviceId}, #{option.optionDetailId});
        </foreach>
    </insert>

    <resultMap id="serviceFlow" type="com.green.jobdone.service.model.ServiceGetOneRes">
        <id property="serviceId" column="serviceId"/>
        <result property="userName" column="userName"/>
        <result property="userPhone" column="userPhone" javaType="java.lang.String"  typeHandler="org.apache.ibatis.type.StringTypeHandler"/>
        <result property="businessName" column="businessName"/>
        <result property="reservedName" column="reservedName"/>
        <result property="productName" column="productName"/>
        <result property="address" column="address" javaType="java.lang.String"  typeHandler="org.apache.ibatis.type.StringTypeHandler"/>
        <result property="businessAddress" column="businessAddress"/>
        <result property="price" column="price"/>
        <result property="completed" column="completed"/>
        <result property="comment" column="comment"/>
        <result property="addComment" column="addComment"/>
        <result property="startDate" column="startDate"/>
        <result property="endDate" column="endDate"/>
        <result property="mStartTime" column="mStartTime"/>
        <result property="mEndTime" column="mEndTime"/>
        <result property="pyeong" column="pyeong"/>
        <result property="businessNum" column="businessNum" javaType="java.lang.String"  typeHandler="org.apache.ibatis.type.StringTypeHandler"/>
        <result property="createdAt" column="createdAt"/>
        <result property="categoryName" column="categoryName" javaType="java.lang.String"  typeHandler="org.apache.ibatis.type.StringTypeHandler"/>
        <collection property="options" resultMap="servicePhone"/>
        <collection property="phone" resultMap="serviceOption"/>
    </resultMap>
    <resultMap id="servicePhone" type="com.green.jobdone.service.model.Dto.ServicePhone">
        <result property="businessPhone" column="businessPhone"/>
    </resultMap>

    <resultMap id="serviceOption" type="com.green.jobdone.service.model.Dto.ServiceOptionDto">
        <id property="productOptionId" column="productOptionId"/>
        <result property="optionName" column="optionName"/>
        <collection property="optionDetails" resultMap="serviceOptionDetail"/>
    </resultMap>

    <resultMap id="serviceOptionDetail" type="com.green.jobdone.service.model.Dto.OptionDetailDto">
        <id property="optionDetailId" column="optionDetailId"/>
        <result property="detailName" column="detailName"/>
        <result property="detailPrice" column="detailPrice"/>
        <result property="contents" column="contents"/>
    </resultMap>

    <select id="GetServiceOne" resultMap="serviceFlow">
        select a.serviceId, a.name as userName, a.phone as userPhone, d.businessName as businessName, b.name as reservedName,
        e.detailTypeName as productName, a.price, a.completed, a.address, a.comment, a.addComment, a.createdAt, a.userId,
        k.startDate, k.endDate, k.mStartTime, k.mEndTime, d.businessNum, l.categoryName, group_concat(distinct j.phone) as businessPhone,
        g.productOptionId, g.name as optionName, i.name as detailName, i.contents, i.price as detailPrice, i.optionDetailId,
        a.pyeong, b.address as businessAddress
        from service a
        left join user b on a.userId = b.userId
        left join product c on a.productId = c.productId
        left join business d on c.businessId = d.businessId
        left join detail_type e on c.detailTypeId = e.detailTypeId
        left join service_option f on a.serviceId = f.serviceId
        left join option_detail i ON f.optionDetailId = i.optionDetailId
        left join product_option g on i.productOptionId = g.productOptionId
        left join business_phone j on d.businessId = j.businessId
        left join service_detail k on a.serviceId = k.serviceId
        left join category l on e.categoryId = l.categoryId
        where
        a.serviceId = #{serviceId}


    </select>

    <select id="GetServiceFlow">
        select a.serviceId, a.createdAt, a.price, a.completed, b.name as reservedName,
        a.name userName, c.startDate, e.detailTypeName as productName, f.businessName as businessName,
        a.address
        from service A
        left join user B on a.userId = b.userId
        left join service_detail C on a.serviceId = c.serviceId
        left join product d on a.productId = d.productId
        left join detail_type e on d.detailTypeId = e.detailTypeId
        left join business f on d.businessId = f.businessId
        where
        <if test="userId != null and businessId==null">
            b.userId = #{userId}
        </if>
        <if test="businessId != null and userId == null">
            f.businessId = #{businessId}
        </if>
    </select>

    <select id="providerUserId">
        select d.userId
        from service a
        join product b on a.productId = b.productId
        join business c on b.businessId = c.businessId
        join user d on c.userId = d.userId
        where a.serviceId = #{serviceId}
    </select>

    <update id="updService">
        update service
        <set>
            <if test="totalPrice != null">price = #{totalPrice},</if>
            <if test="addComment != null">addComment = #{addComment},</if>
            <if test="pyeong != null">pyeong = #{pyeong},</if>
            completed = 2
        </set>
        where serviceId = #{serviceId}
    </update>
    <update id="updServiceDetail">
        update service_detail
        <set>
            <if test="startDate != null"> startDate = #{startDate}, </if>
            <if test="endDate != null"> endDate = #{endDate}, </if>
            <if test="mStartTime != null"> mStartTime = #{mStartTime}, </if>
            <if test="mEndTime != null"> mEndTime = #{mEndTime} </if>
        </set>
        where serviceId = #{serviceId}
    </update>

    <update id="updServiceOption" parameterType="com.green.jobdone.service.model.ServicePutReq">
        <foreach collection="options" item="option" separator=";">
            <if test="option.serviceOptionId != null">
                update service_option
                <set>
                    <if test="option.price != null">price = #{option.price},</if>
                    <if test="option.optionComment != null">`comment` = #{option.optionComment},</if>
                </set>
                where serviceOptionId = #{option.serviceOptionId}
            </if>
            <if test="option.serviceOptionId == null">
                insert into service_option
                <set>
                    serviceId = #{serviceId},
                    optionDetailId = #{option.optionDetailId},
                    <if test="option.price != null">price = #{option.price},</if>
                    <if test="option.optionComment != null">`comment` = #{option.optionComment},</if>
                </set>
            </if>
        </foreach>
    </update>

    <select id="findUserId">
        select userId
        from business
        where businessId = #{businessId}
    </select>

    <update id="patchCompleted">
        update service
        set completed = #{completed}
        where serviceId = #{serviceId}
        <if test="userId !=0">
            and userId = #{userId}
        </if>
    </update>

    <select id="getCompleted">
        select completed
        from service
        where serviceId = #{serviceId}
    </select>


    <select id="serviceInfo">
        select a.userId, a.price, c.detailTypeName as productName
        from service a
        join product b on a.productId = b.productId
        join detail_type c on b.detailTypeId = c.detailTypeId
        where serviceId = #{serviceId}
    </select>
</mapper>