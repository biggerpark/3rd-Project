<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.jobdone.review.ReviewMapper">
    <insert id="insReview" useGeneratedKeys="true" keyProperty="reviewId">
        INSERT INTO review
        SET serviceId = #{serviceId}
        , contents = #{contents}
        , score = #{score}
    </insert>

    <select id="selReviewWithPicList">
        SELECT T1.*, T2.pic, T2.reviewPicId
        FROM (
        SELECT F.businessId, A.reviewId, A.`contents`, A.score, A.createdAt, E.userId
        , E.name, E.pic AS writerPic, D.detailTypeName, AVG(A.score) OVER(PARTITION BY F.businessId) AS averageScore
        FROM review A
        JOIN service B
        ON A.serviceId = B.serviceId
        JOIN product C
        ON B.productId = C.productId
        JOIN detail_type D
        ON D.detailTypeId = C.detailTypeId
        JOIN user E
        ON B.userId = E.userId
        JOIN business F
        ON F.businessId = C.businessId
        <if test=" businessId != null ">
            WHERE F.businessId = #{businessId}
        </if>
        <if test=" userId != null ">
            WHERE B.userId = #{userId}
        </if>
        <if test=" state == 0 ">
            ORDER BY A.reviewId DESC
        </if>
        <if test=" state == 1 ">
            ORDER BY A.score DESC
        </if>
        <if test=" state == 2 ">
            ORDER BY A.score
        </if>
        LIMIT #{startIdx}, #{size}
        ) T1
        LEFT JOIN review_pic T2
        ON T1.reviewId = T2.reviewId
    </select>
    
    <update id="updReview">
        UPDATE review
        <set>
            <if test="contents != null and contents != ''">
                contents = #{contents}
            </if>
            <if test="score != null and score != ''">
                ,score = #{score}
            </if>
        </set>
        WHERE reviewId = #{reviewId} and serviceId = #{serviceId}
    </update>

    <select id="selUserIdByServiceId">
        SELECT userId
        FROM service
        WHERE serviceId = #{serviceId}
    </select>

    <select id="selUserIdByReviewId">
        SELECT userId
          FROM service A
          JOIN review B
            ON A.serviceId = B.serviceId
         WHERE reviewId = #{reviewId}
    </select>

    <delete id="delReview">
        DELETE FROM review
         WHERE reviewId = #{reviewId}
    </delete>



</mapper>