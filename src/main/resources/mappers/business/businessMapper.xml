<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.jobdone.business.BusinessMapper">

    <insert id="insBusiness" useGeneratedKeys="true" keyProperty="businessId">
        INSERT INTO business
        SET
        paper = #{paper},
        userId = #{userId},
        businessNum = #{businessNum},
        businessName = #{businessName},
        address = #{address},
        detailTypeId = #{detailTypeId},
        busiCreatedAt = #{busiCreatedAt},
        tel = #{tel}
    </insert>

    <select id="existBusinessNum" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM business
        WHERE businessNum = #{businessNum}
    </select>

    <update id="udtBusiness">
        UPDATE business
        <set>
            <if test=" title != null and title != ''">
                title = #{title}
            </if>
            <if test=" title != null and title != ''">
                ,contents = #{contents}
            </if>
            <if test="closeTime != null and closeTime != ''">
                ,closeTime = #{closeTime}
            </if>
            <if test="openTime != null and openTime != ''">
                ,openTime = #{openTime}
            </if>
        </set>
        WHERE businessId = #{businessId} and userId = #{userId}
    </update>

    <insert id="insBusinessPics">
        insert into business_pic
        (business_id, pic)
        values
        <foreach collection="pics" item="pic" open="(" close=")" separator="),(">
            #{businessId}, #{pic}
        </foreach>
    </insert>
    <select id="existsBusinessPhone" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM business_phone
        WHERE businessId = #{businessId} AND phone = #{phone}
    </select>

    <insert id="insBusinessPhone">
        insert into businessPhone
        set businessId = #{businessId},
        phone = #{phone}
    </insert>

    <update id="udtBusinessPics">
        update business_pic
        set state = 1
        where businessId = #{businessId}
    </update>

    <update id="udtBusinessState">
        update business
        set state = #{state}
        where businessId = #{businessId}
    </update>

    <update id="udtBusinessLogo">
        update business
        <set>
            <if test="logo">
                logo = #{logo}
            </if>
        </set>
        where businessId = #{businessId}
    </update>

    <select id="selAllBusiness">
        SELECT c.pic, b.businessId, b.businessName, b.title, p.price AS price
        , ROUND(AVG(r.score),2)AS scoreAvg, IF(l.userId IS null,0,1)AS `like`
        FROM business b
        left JOIN business_pic c
        ON c.businessId = b.businessId
        JOIN product p
        ON b.businessId = p.businessId
        JOIN service s
        ON s.productId = p.productId
        JOIN review r
        ON r.serviceId =s.serviceId
        JOIN `like` l
        ON l.businessId = b.businessId
        AND l.userId = 1

        GROUP BY b.businessId, b.businessName


    </select>

    <select id="selOneBusiness">

        SELECT c.pic, b.businessId, b.businessName, b.title, p.price AS price
        , ROUND(AVG(r.score),2)AS scoreAvg, IF(l.userId IS null,0,1)AS `like`
        , b.address, COUNT(s.productId) AS serviceCount, b.openingTime, b.closingTime
        , b.busiCreatedAt, b.`contents`
        FROM business b
        left JOIN business_pic c
        ON c.businessId = b.businessId
        JOIN product p
        ON b.businessId = p.businessId
        JOIN service s
        ON s.productId = p.productId
        JOIN review r
        ON r.serviceId =s.serviceId
        JOIN `like` l
        ON l.businessId = b.businessId
        AND l.userId = #{signedUserId}
        WHERE b.businessId = #{businessId}
        GROUP BY b.businessId, b.businessName

    </select>


</mapper>